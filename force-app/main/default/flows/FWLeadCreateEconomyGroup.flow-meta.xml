<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <name>navigateToRecord</name>
        <label>navigateToRecord</label>
        <locationX>2054</locationX>
        <locationY>246</locationY>
        <actionName>c:navigateToRecord</actionName>
        <actionType>component</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>varNewEconomyGroup.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>c:navigateToRecord</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>SetNewEconomyGroup</name>
        <label>SetNewEconomyGroup</label>
        <locationX>1224</locationX>
        <locationY>246</locationY>
        <assignmentItems>
            <assignToReference>varNewEconomyGroup.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varNewEconomyGroup.Email__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Email.value</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varNewEconomyGroup.Phone__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Telefone.value</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varNewEconomyGroup.Product__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Product</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateEconomyGroup</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>choiceNao</name>
        <choiceText>Não</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Não</stringValue>
        </value>
    </choices>
    <choices>
        <name>choiceSim</name>
        <choiceText>Sim</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Sim</stringValue>
        </value>
    </choices>
    <decisions>
        <name>CreateNewGroup</name>
        <label>CreateNewGroup</label>
        <locationX>991</locationX>
        <locationY>450</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YesCreateNew</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NewGroupChoice</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>choiceSim</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Screen_Info_Data</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasEconomyGroup</name>
        <label>HasEconomyGroup?</label>
        <locationX>716</locationX>
        <locationY>248</locationY>
        <defaultConnector>
            <targetReference>Screen_Info_Data</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YesHasEconomyGroup</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetLead.EconomicGroup__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetExistingEconomyGroup</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>choiceProduct</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Produto__c</picklistField>
        <picklistObject>PreLead__c</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>forExistingEconomyGroupName</name>
        <dataType>String</dataType>
        <expression>{!GetExistingEconomyGroup.Name}</expression>
    </formulas>
    <interviewLabel>[Lead]- Criar Grupo Economico {!$Flow.CurrentDateTime}</interviewLabel>
    <label>[Lead]- Criar Grupo Economico</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>CreateEconomyGroup</name>
        <label>CreateEconomyGroup</label>
        <locationX>1438</locationX>
        <locationY>246</locationY>
        <connector>
            <targetReference>UpdateLeadWithEconomyGroup</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error</targetReference>
        </faultConnector>
        <inputReference>varNewEconomyGroup</inputReference>
    </recordCreates>
    <recordLookups>
        <name>GetExistingEconomyGroup</name>
        <label>GetExistingEconomyGroup</label>
        <locationX>725</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Screen_Has_Economy_Group</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetLead.EconomicGroup__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EconomicGroup__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetLead</name>
        <label>GetLead</label>
        <locationX>500</locationX>
        <locationY>246</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>HasEconomyGroup</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Lead</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateLeadWithEconomyGroup</name>
        <label>UpdateLeadWithEconomyGroup</label>
        <locationX>1641</locationX>
        <locationY>246</locationY>
        <connector>
            <targetReference>Screen_Success</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>EconomicGroup__c</field>
            <value>
                <elementReference>varNewEconomyGroup.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Lead</object>
    </recordUpdates>
    <screens>
        <name>Error</name>
        <label>Error</label>
        <locationX>1539</locationX>
        <locationY>44</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ErrorMessage</name>
            <fieldText>&lt;p&gt;Erro:&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;color: rgb(255, 0, 0);&quot;&gt;{!$Flow.FaultMessage}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Finalizar</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Screen_Has_Economy_Group</name>
        <label>Screen Has Economy Group</label>
        <locationX>999</locationX>
        <locationY>643</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>CreateNewGroup</targetReference>
        </connector>
        <fields>
            <name>InfoHasEconomyGroup</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;O Lead atual já pertence ao Grupo Econômico&lt;/span&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt; &quot;&lt;/strong&gt;&lt;strong style=&quot;font-size: 14px; background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!forExistingEconomyGroupName}&quot;&lt;/strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>NewGroupChoice</name>
            <choiceReferences>choiceSim</choiceReferences>
            <choiceReferences>choiceNao</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>choiceSim</defaultSelectedChoiceReference>
            <fieldText>Deseja criar um novo Grupo Econômico e vincular o Lead a este novo Grupo?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <nextOrFinishButtonLabel>Avançar</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Screen_Info_Data</name>
        <label>Screen Info Data</label>
        <locationX>999</locationX>
        <locationY>246</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SetNewEconomyGroup</targetReference>
        </connector>
        <fields>
            <name>InfoNewGroupData</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;O novo Grupo Econômico será criado com as seguintes informações:&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Name</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>GetLead.Name</elementReference>
            </defaultValue>
            <fieldText>Nome do Grupo Econômico</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Telefone</name>
            <extensionName>flowruntime:phone</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>GetLead.Phone</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Telefone</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Email</name>
            <extensionName>flowruntime:email</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>GetLead.Email</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Product</name>
            <choiceReferences>choiceProduct</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>GetLead.Produtp__c</elementReference>
            </defaultValue>
            <fieldText>Produto</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
        </fields>
        <nextOrFinishButtonLabel>Avançar</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Screen_Success</name>
        <label>Screen Success</label>
        <locationX>1844</locationX>
        <locationY>246</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>navigateToRecord</targetReference>
        </connector>
        <fields>
            <name>ScreenSuccessTxt</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;O novo Grupo Econômico foi criado com sucesso e o Lead vinculado ao novo Grupo automaticamente.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Finalizar</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>374</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>GetLead</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varNewEconomyGroup</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>EconomicGroup__c</objectType>
    </variables>
</Flow>
