<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <decisions>
        <name>FindPreLead</name>
        <label>FindPreLead?</label>
        <locationX>766</locationX>
        <locationY>1048</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Find</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetPreLead</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>HasEconomicGroup</targetReference>
            </connector>
            <label>Find</label>
        </rules>
    </decisions>
    <decisions>
        <name>HasEconomicGroup</name>
        <label>HasEconomicGroup?</label>
        <locationX>765</locationX>
        <locationY>1248</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>YesEconomicGroup</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetPreLead.EconomicGroup__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetEconomicGroup</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsNewDecision</name>
        <label>IsNew?</label>
        <locationX>767</locationX>
        <locationY>675</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>New</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetPreLead</targetReference>
            </connector>
            <label>New</label>
        </rules>
    </decisions>
    <decisions>
        <name>TaskFromCadence</name>
        <label>TaskFromCadence?</label>
        <locationX>768</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>IsNewDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>LeadCadence</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.WhoId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00Q</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Source__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cadence</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>LeadActivityTracking</targetReference>
            </connector>
            <label>Lead Cadence</label>
        </rules>
        <rules>
            <name>OppCadence</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.WhatId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>006</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Source__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cadence</stringValue>
                </rightValue>
            </conditions>
            <label>Opp Cadence</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>isNew</name>
        <dataType>Boolean</dataType>
        <expression>isnew()</expression>
    </formulas>
    <interviewLabel>[Task] Main Created Updated {!$Flow.CurrentDateTime}</interviewLabel>
    <label>[Task] Main Created Updated</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>GetEconomicGroup</name>
        <label>GetEconomicGroup</label>
        <locationX>772</locationX>
        <locationY>1441</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Grupo_Economico_Pre_Lead_Updates</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetPreLead.EconomicGroup__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EconomicGroup__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetPreLead</name>
        <label>GetPreLead</label>
        <locationX>774</locationX>
        <locationY>874</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>FindPreLead</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PreLead__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>650</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>TaskFromCadence</targetReference>
        </connector>
        <object>Task</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <subflows>
        <name>Grupo_Economico_Pre_Lead_Updates</name>
        <label>[Grupo Economico] Pr√©-Lead Updates</label>
        <locationX>772</locationX>
        <locationY>1639</locationY>
        <flowName>FWEconomicGroupPreLeadUpdates</flowName>
        <inputAssignments>
            <name>idEconomicGroup</name>
            <value>
                <elementReference>GetEconomicGroup.Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>LeadActivityTracking</name>
        <label>LeadActivityTracking</label>
        <locationX>464</locationX>
        <locationY>545</locationY>
        <connector>
            <targetReference>IsNewDecision</targetReference>
        </connector>
        <flowName>FWLeadActivityTracking</flowName>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>varWhoId</name>
            <value>
                <elementReference>$Record.WhoId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
</Flow>
